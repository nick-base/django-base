# Generated by Django 2.2 on 2019-05-30 03:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=32, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=64, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('first_name', models.CharField(blank=True, max_length=128, null=True)),
                ('last_name', models.CharField(blank=True, max_length=128, null=True)),
                ('active', models.BooleanField(default=False)),
                ('status', models.CharField(default='1', max_length=1)),
                ('password_reset_code', models.CharField(blank=True, max_length=40, null=True)),
                ('password_reset_code_create_time', models.DateTimeField(blank=True, null=True)),
                ('email_reset_code', models.CharField(blank=True, max_length=40, null=True)),
                ('email_reset_code_create_time', models.DateTimeField(blank=True, null=True)),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.CharField(max_length=256)),
                ('code', models.CharField(max_length=256, unique=True)),
                ('description', models.CharField(max_length=512)),
                ('long_description', models.TextField(null=True, verbose_name='Description')),
            ],
            options={
                'db_table': 'permission',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=512)),
                ('created_account', models.ForeignKey(db_column='created_account', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_role', to='users.Account')),
                ('permissions', models.ManyToManyField(related_name='roles', to='users.Permission')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='AccountRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_role', to='users.Account')),
                ('created_account', models.ForeignKey(db_column='created_account', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_account_role', to='users.Account')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_account', to='users.Role')),
            ],
            options={
                'db_table': 'account_role',
            },
        ),
    ]
